"use strict";(self.webpackChunkafternoon_grocery_store=self.webpackChunkafternoon_grocery_store||[]).push([[8184],{2244:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-d1647e8e",path:"/blogs/LeetCode/2020/7-27-13RomanNumeralsTurnIntoIntegers.html",title:"罗马数字转整数",lang:"zh-CN",frontmatter:{title:"罗马数字转整数",date:"2020-07-27T00:00:00.000Z",tags:["简单","力扣"],categories:["算法笔记"]},excerpt:"",headers:[{level:2,title:"罗马数字转整数",slug:"罗马数字转整数",children:[{level:3,title:"示例1：",slug:"示例1",children:[]},{level:3,title:"示例2：",slug:"示例2",children:[]},{level:3,title:"示例3：",slug:"示例3",children:[]},{level:3,title:"示例4：",slug:"示例4",children:[]},{level:3,title:"示例5：",slug:"示例5",children:[]},{level:3,title:"代码",slug:"代码",children:[]}]}],git:{createdTime:1642079704e3,updatedTime:1642079704e3,contributors:[{name:"shinuyeim",email:"shinuyemail@gmail.com",commits:1}]}}},3215:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h2 id="罗马数字转整数" tabindex="-1"><a class="header-anchor" href="#罗马数字转整数" aria-hidden="true">#</a> 罗马数字转整数</h2><p>罗马数字包含以下七种字符: [^I]， [^V]，[^X]， [^L]，[^C]，[^D] 和 [^M]。</p><table><thead><tr><th style="text-align:left;">字符</th><th style="text-align:left;">数值</th></tr></thead><tbody><tr><td style="text-align:left;">I</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">V</td><td style="text-align:left;">5</td></tr><tr><td style="text-align:left;">X</td><td style="text-align:left;">10</td></tr><tr><td style="text-align:left;">L</td><td style="text-align:left;">50</td></tr><tr><td style="text-align:left;">C</td><td style="text-align:left;">100</td></tr><tr><td style="text-align:left;">D</td><td style="text-align:left;">500</td></tr><tr><td style="text-align:left;">M</td><td style="text-align:left;">1000</td></tr></tbody></table><p>例如， 罗马数字 2 写做 [^II] ，即为两个并列的 1。12 写做 [^XII] ，即为 [^X] + [^II] 。 27 写做  [^XXVII], 即为 [^XX] + [^V] + [^II] 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 [^IIII]，而是 [^IV]。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><blockquote><ul><li>[^I] 可以放在 [^V] (5) 和 [^X] (10) 的左边，来表示 4 和 9。</li><li>[^X] 可以放在 [^L] (50) 和 [^C] (100) 的左边，来表示 40 和 90。</li><li>[^C] 可以放在 [^D] (500) 和 [^M] (1000) 的左边，来表示 400 和 900。</li></ul></blockquote><p>给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。</p><h3 id="示例1" tabindex="-1"><a class="header-anchor" href="#示例1" aria-hidden="true">#</a> 示例1：</h3><blockquote><p>输入：&quot;III&quot;<br> 输出：3</p></blockquote><h3 id="示例2" tabindex="-1"><a class="header-anchor" href="#示例2" aria-hidden="true">#</a> 示例2：</h3><blockquote><p>输入：&quot;IV&quot;<br> 输出：4</p></blockquote><h3 id="示例3" tabindex="-1"><a class="header-anchor" href="#示例3" aria-hidden="true">#</a> 示例3：</h3><blockquote><p>输入：&quot;IX&quot;<br> 输出：9</p></blockquote><h3 id="示例4" tabindex="-1"><a class="header-anchor" href="#示例4" aria-hidden="true">#</a> 示例4：</h3><blockquote><p>输入：&quot;LVIII&quot;<br> 输出：58<br> 解释：L = 50, V= 5, III = 3.</p></blockquote><h3 id="示例5" tabindex="-1"><a class="header-anchor" href="#示例5" aria-hidden="true">#</a> 示例5：</h3><blockquote><p>输入：&quot;MCMXCIV&quot;<br> 输出：1994<br> 解释: M = 1000, CM = 900, XC = 90, IV = 4.</p></blockquote><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>\n   \n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">romanToInt</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n \n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;M&#39;</span><span class="token operator">:</span>\n                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;D&#39;</span><span class="token operator">:</span>\n                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;C&#39;</span><span class="token operator">:</span>\n                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;L&#39;</span><span class="token operator">:</span>\n                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;X&#39;</span><span class="token operator">:</span>\n                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;V&#39;</span><span class="token operator">:</span>\n                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;I&#39;</span><span class="token operator">:</span>\n                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token keyword">default</span><span class="token operator">:</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n \n        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> numbers<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                sum <span class="token operator">-=</span> numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                sum <span class="token operator">+=</span> numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n \n        <span class="token keyword">return</span> sum <span class="token operator">+</span> numbers<span class="token punctuation">[</span>numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div>',19),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])}}]);