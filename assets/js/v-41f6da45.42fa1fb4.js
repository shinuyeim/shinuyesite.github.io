"use strict";(self.webpackChunkafternoon_grocery_store=self.webpackChunkafternoon_grocery_store||[]).push([[977],{5348:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-41f6da45",path:"/blogs/LeetCode/2021/2021-06-04-852TheSummitOfTheMountainArrayIndex.html",title:"山脉数组的峰顶索引",lang:"zh-CN",frontmatter:{title:"山脉数组的峰顶索引",date:"2021-06-04T00:00:00.000Z",tags:["简单","力扣","二分搜索"],categories:["算法笔记"]},excerpt:"",headers:[{level:2,title:"题目描述",slug:"题目描述",children:[]},{level:2,title:"示例",slug:"示例",children:[]},{level:2,title:"提示",slug:"提示",children:[]},{level:2,title:"算法设计",slug:"算法设计",children:[]},{level:2,title:"代码",slug:"代码",children:[]},{level:2,title:"复杂度分析",slug:"复杂度分析",children:[]}],git:{createdTime:1642079704e3,updatedTime:1642079704e3,contributors:[{name:"shinuyeim",email:"shinuyemail@gmail.com",commits:1}]}}},1106:(n,a,s)=>{s.r(a),s.d(a,{default:()=>Z});var e=s(6252),t=s(5847);const l=(0,e._)("h2",{id:"题目描述",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#题目描述","aria-hidden":"true"},"#"),(0,e.Uk)(" 题目描述")],-1),r=(0,e._)("p",null,"符合下列属性的数组 arr 称为 山脉数组 ：",-1),o=(0,e._)("ul",null,[(0,e._)("li",null,"arr.length >= 3"),(0,e._)("li",null,[(0,e.Uk)("存在 i (0 < i < arr.length - 1)使得： "),(0,e._)("ul",null,[(0,e._)("li",null,"arr[0] < arr[1] < ... < arr[i-1] < arr[i]"),(0,e._)("li",null,"arr[i] > arr[i+1] > ... >arr[arr.length -1]")])])],-1),c=(0,e._)("p",null,"给你由整数组成的山脉数组 arr ，返回任何满足 arr[0] < arr[1] < ... < arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1] 的下标 i 。",-1),k=(0,e._)("hr",null,null,-1),u=(0,e._)("h2",{id:"示例",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#示例","aria-hidden":"true"},"#"),(0,e.Uk)(" 示例")],-1),_=(0,e._)("div",{class:"custom-container tip"},[(0,e._)("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[(0,e._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,e._)("circle",{cx:"12",cy:"12",r:"9"}),(0,e._)("path",{d:"M12 8h.01"}),(0,e._)("path",{d:"M11 12h1v4h1"})])]),(0,e._)("p",{class:"custom-container-title"},"TIP"),(0,e._)("p",null,[(0,e.Uk)("输入：arr = [0,1,0]"),(0,e._)("br"),(0,e.Uk)(" 输出：1")]),(0,e._)("p",null,[(0,e.Uk)("输入：arr = [0,2,1,0]"),(0,e._)("br"),(0,e.Uk)(" 输出：1")]),(0,e._)("p",null,[(0,e.Uk)("输入：arr = [0,10,5,2]"),(0,e._)("br"),(0,e.Uk)(" 输出：1")]),(0,e._)("p",null,[(0,e.Uk)("输入：arr = [3,4,5,1]"),(0,e._)("br"),(0,e.Uk)(" 输出：2")]),(0,e._)("p",null,[(0,e.Uk)("输入：arr = [24,69,100,99,79,78,67,36,26,19]"),(0,e._)("br"),(0,e.Uk)(" 输出：2")])],-1),i=(0,e._)("hr",null,null,-1),p=(0,e._)("h2",{id:"提示",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#提示","aria-hidden":"true"},"#"),(0,e.Uk)(" 提示")],-1),U=(0,e._)("ul",null,[(0,e._)("li",null,"3 <= arr.length <= $10^4$"),(0,e._)("li",null,"0 <= arr[i] <= $10^6$"),(0,e._)("li",null,"题目数据保证 arr 是一个山脉数组"),(0,e._)("li",null,"很容易想到时间复杂度 O(n) 的解决方案，你可以设计一个 O(log(n)) 的解决方案吗？")],-1),d=(0,e._)("h2",{id:"算法设计",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#算法设计","aria-hidden":"true"},"#"),(0,e.Uk)(" 算法设计")],-1),b=(0,e._)("p",null,"山脉数组就是一个先升后降的数组，且数组中没有重复元素。我们要找到山脉数组中最大值的下标，从示例我们可以看出，下标从0开始计算。",-1),h=(0,e._)("p",null,[(0,e.Uk)("根据山脉数组的性质，我们可以逐个查找元素，直到找到后一个元素的值小于前一个元素的值，那么前一个元素就是这个山脉数组的最大值，这个元素的下标就是我们需要的值。该思想的具体实现算法如下"),(0,e._)("strong",null,"int peakIndexInMountainArrayByLs(int* arr, int arrSize)")],-1),m=(0,e._)("p",null,[(0,e.Uk)("题目的标签也是使用二分法，那就使用二分法来查找出这个元素的下标。"),(0,e._)("br"),(0,e.Uk)(" 二分法的基本思想就是利用两个指针从数组的两边检索整个数组，直到找到我们想要的结果。"),(0,e._)("br"),(0,e.Uk)(" 二分法的关键在于while语句的判定条件要不要小于等于，在本题中我们可以发现，山脉数组的元素是不会重复的，我们要找的是整个数组的最大值，所以在使用二分法的时候要注意边界的范围。具体的二分法使用，更具不同的场景，灵活使用。")],-1),g=(0,e._)("hr",null,null,-1),w=(0,e._)("p",null,[(0,e._)("strong",null,"二分查找算法的三大模板"),(0,e.Uk)(),(0,e._)("img",{src:t,alt:"二分查找算法的三大模板"})],-1),y=(0,e._)("hr",null,null,-1),f=(0,e.Uk)("二分查找的套路以及模板在B站有一个详细的教程，"),x={href:"https://www.bilibili.com/video/BV1Ng4y1q7E3?from=search&seid=14309897868937423862",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Uk)("二分查找Binary Search套路和解题模板"),I=(0,e.Uk)("。有疑惑的可以仔细看看，在多进行几道二分查找算法的训练强化一下。"),O=(0,e._)("h2",{id:"代码",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#代码","aria-hidden":"true"},"#"),(0,e.Uk)(" 代码")],-1),B=(0,e._)("p",null,[(0,e._)("strong",null,"线性搜索：")],-1),M=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"peakIndexInMountainArrayByLs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)(" arr"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" arrSize"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" index "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token keyword"},"while"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("arr"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("index"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" arr"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("index "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n\t\tindex"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" index"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br")])],-1),S=(0,e._)("hr",null,null,-1),T=(0,e._)("p",null,[(0,e._)("strong",null,"二分搜索：")],-1),z=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"peakIndexInMountainArray"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"int"),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)(" arr"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" arrSize"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" left "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" right "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" arrSize"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" mid"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token keyword"},"while"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("left "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" right"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n\t\tmid "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" left "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("right "),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)(" left"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"2"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\t\t"),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("arr"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("mid"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" arr"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("mid "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n\t\t\tleft "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" mid "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\t\t"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\t\t"),(0,e._)("span",{class:"token keyword"},"else"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n\t\t\tright "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" mid"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\t\t"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" right"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br")])],-1),C=(0,e._)("hr",null,null,-1),A=(0,e._)("h2",{id:"复杂度分析",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#复杂度分析","aria-hidden":"true"},"#"),(0,e.Uk)(" 复杂度分析")],-1),L=(0,e._)("p",null,[(0,e._)("strong",null,"时间复杂度："),(0,e._)("br"),(0,e.Uk)(" 线性搜索中，时间复杂度为O(n)。"),(0,e._)("br"),(0,e.Uk)(" 二分搜索中，算法的时间复杂度为O(logn);")],-1),$=(0,e._)("p",null,[(0,e._)("strong",null,"空间复杂度："),(0,e._)("br"),(0,e.Uk)(" 线性搜索中，空间复杂度为O(1)。"),(0,e._)("br"),(0,e.Uk)(" 二分搜索中，空间复杂度为O(1);")],-1),N={},Z=(0,s(3744).Z)(N,[["render",function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[l,r,o,c,k,u,_,i,p,U,d,b,h,m,g,w,y,(0,e._)("p",null,[f,(0,e._)("a",x,[v,(0,e.Wm)(s)]),I]),O,B,M,S,T,z,C,A,L,$],64)}]])},5847:(n,a,s)=>{n.exports=s.p+"assets/img/snipaste_2021_06_04.3fb1ce87.png"}}]);